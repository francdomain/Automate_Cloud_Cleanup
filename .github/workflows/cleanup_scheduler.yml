name: Cloud Cleanup Scheduler

on:
  schedule:
    - cron: "0 0 */7 * *" # Run every 7 days
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  cloud-cleanup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::992382613070:role/github-actions-cleanup-role
        aws-region: us-east-1

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Cleanup Script
      env:
        DRY_RUN: "True" # Set this to "False" to perform actual cleanup
      run: |
        python cloud_cleanup.py

    - name: Create Zip of Report
        run: |
          zip cleanup-report.zip cloud_cleanup_report_*.csv

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cleanup-report
          path: cleanup-report.zip

  send-email:
    runs-on: ubuntu-latest
    needs: cloud-cleanup

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: cleanup-report
          path: reports

      - name: Unzip Report
        run: |
          cd reports
          unzip cleanup-report.zip

      - name: List Files in Reports
        run: ls -l reports

      - name: Send Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Cloud Cleanup Report"
          body: |
            Hello,

            Please find attached the Cloud Cleanup Report for your review.

            Regards,
            GitHub Actions
          to: recipient@example.com
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain
          attachments: reports/cloud_cleanup_report_*.csv