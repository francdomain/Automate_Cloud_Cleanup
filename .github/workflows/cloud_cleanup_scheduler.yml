name: Cloud Cleanup Scheduler

on:
  schedule:
    - cron: "0 0 */7 * *" # Run every 7 days
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  cloud-cleanup:
    runs-on: ubuntu-latest

    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
      LAMBDA_FUNCTION_NAME: "CloudCleanupLambda"
      AWS_REGION: "us-east-1"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-cleanup-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Cleanup Script (Dry Run)
        env:
          DRY_RUN: "True"
        run: |
          python cloud_cleanup.py

      - name: Generate Cleanup Report
        run: |
          zip cleanup-report.zip cloud_cleanup_report_*.csv

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cleanup-report
          path: cleanup-report.zip

      - name: Send Slack Notification with Approval Buttons
        run: |
          curl -X POST -H "Authorization: Bearer ${{ env.SLACK_BOT_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{
            "channel": "${{ env.CHANNEL_ID }}",
            "text": "The Cloud Cleanup dry-run report is ready. Approve to perform the actual cleanup.",
            "attachments": [
              {
                "fallback": "Approve or Decline the cleanup.",
                "text": "Choose an action:",
                "actions": [
                  {
                    "type": "button",
                    "text": "Approve Cleanup",
                    "style": "primary",
                    "value": "approve_cleanup",
                    "action_id": "approve_cleanup"
                  },
                  {
                    "type": "button",
                    "text": "Decline Cleanup",
                    "style": "danger",
                    "value": "decline_cleanup",
                    "action_id": "decline_cleanup"
                  }
                ]
              }
            ]
          }' https://slack.com/api/chat.postMessage

  handle-slack-response:
    runs-on: ubuntu-latest
    needs: cloud-cleanup

    steps:
      - name: Listen for Slack Approval
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ env.SLACK_BOT_TOKEN }}" \
                      -H "Content-Type: application/json" \
                      -X POST https://slack.com/api/conversations.history?channel=${{ env.CHANNEL_ID }})
          echo "Slack Response: $RESPONSE"

          if echo "$RESPONSE" | grep -q "approve_cleanup"; then
            echo "Cleanup Approved. Triggering Lambda."
            aws lambda invoke --function-name ${{ env.LAMBDA_FUNCTION_NAME }} response.json
          else
            echo "Cleanup Declined. No action taken."
          fi
